{"abi":[{"type":"function","name":"EVM_EXTRA_ARGS_V1_TAG","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"GENERIC_EXTRA_ARGS_V2_TAG","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"SVM_ACCOUNT_BYTE_SIZE","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"SVM_EXTRA_ARGS_MAX_ACCOUNTS","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"SVM_EXTRA_ARGS_V1_TAG","inputs":[],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"SVM_MESSAGING_ACCOUNTS_OVERHEAD","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"SVM_TOKEN_TRANSFER_DATA_OVERHEAD","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x610125610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610607c575f3560e01c806371953f6011605d57806371953f601460c65780637498e3551460cd5780639713cbbd1460da578063a5dd87d81460e2575f5ffd5b80631ac428f81460805780633ab8c0d014609a5780635dd8ee3e1460bf575b5f5ffd5b6087604081565b6040519081526020015b60405180910390f35b60a76397a657c960e01b81565b6040516001600160e01b031990911681526020016091565b6087600281565b6087602081565b60a7630181dcf160e41b81565b608761012c81565b60a7630f9d9d5d60e11b8156fea2646970667358221220592012635f47b582908fd95065b432b14494573f7e0e85a135cadf70074e208a64736f6c634300081b0033","sourceMap":"82:4619:64:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;82:4619:64;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610607c575f3560e01c806371953f6011605d57806371953f601460c65780637498e3551460cd5780639713cbbd1460da578063a5dd87d81460e2575f5ffd5b80631ac428f81460805780633ab8c0d014609a5780635dd8ee3e1460bf575b5f5ffd5b6087604081565b6040519081526020015b60405180910390f35b60a76397a657c960e01b81565b6040516001600160e01b031990911681526020016091565b6087600281565b6087602081565b60a7630181dcf160e41b81565b608761012c81565b60a7630f9d9d5d60e11b8156fea2646970667358221220592012635f47b582908fd95065b432b14494573f7e0e85a135cadf70074e208a64736f6c634300081b0033","sourceMap":"82:4619:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3020:56;;3074:2;3020:56;;;;;168:25:105;;;156:2;141:18;3020:56:64;;;;;;;;1209:57;;-1:-1:-1;;;1209:57:64;;;;;-1:-1:-1;;;;;;374:33:105;;;356:52;;344:2;329:18;1209:57:64;204:210:105;4151:59:64;;4209:1;4151:59;;4273:50;;4321:2;4273:50;;1810:61;;-1:-1:-1;;;1810:61:64;;3290:621;;3349:562;3290:621;;2501:57;;-1:-1:-1;;;2501:57:64;","linkReferences":{}},"methodIdentifiers":{"EVM_EXTRA_ARGS_V1_TAG()":"3ab8c0d0","GENERIC_EXTRA_ARGS_V2_TAG()":"7498e355","SVM_ACCOUNT_BYTE_SIZE()":"71953f60","SVM_EXTRA_ARGS_MAX_ACCOUNTS()":"1ac428f8","SVM_EXTRA_ARGS_V1_TAG()":"a5dd87d8","SVM_MESSAGING_ACCOUNTS_OVERHEAD()":"5dd8ee3e","SVM_TOKEN_TRANSFER_DATA_OVERHEAD()":"9713cbbd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EVM_EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GENERIC_EXTRA_ARGS_V2_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SVM_ACCOUNT_BYTE_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SVM_EXTRA_ARGS_MAX_ACCOUNTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SVM_EXTRA_ARGS_V1_TAG\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SVM_MESSAGING_ACCOUNTS_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SVM_TOKEN_TRANSFER_DATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"SVM_ACCOUNT_BYTE_SIZE\":{\"details\":\"The size of each SVM account address in bytes.\"},\"SVM_EXTRA_ARGS_MAX_ACCOUNTS\":{\"details\":\"The maximum number of accounts that can be passed in SVMExtraArgs.\"},\"SVM_MESSAGING_ACCOUNTS_OVERHEAD\":{\"details\":\"Number of overhead accounts needed for message execution on SVM.These are message.receiver, and the OffRamp Signer PDA specific to the receiver.\"},\"SVM_TOKEN_TRANSFER_DATA_OVERHEAD\":{\"details\":\"The expected static payload size of a token transfer when Borsh encoded and submitted to SVM. TokenPool extra data and offchain data sizes are dynamic, and should be accounted for separately.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/contracts/libraries/Client.sol\":\"Client\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/contracts-ccip/contracts/=node_modules/@chainlink/contracts-ccip/contracts/\",\":@chainlink/contracts/=node_modules/@chainlink/contracts/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@zksync/=node_modules/@zksync/\",\":createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/\",\":pyth-crosschain/=lib/pyth-crosschain/\",\":solady/=node_modules/solady/\",\":solidity-bytes-utils/=lib/solidity-bytes-utils/\",\":solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\",\":wormhole-ntt/=lib/wormhole-ntt/src/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/contracts/libraries/Client.sol\":{\"keccak256\":\"0x7c736e12ebb1d0e3a0c99436eacfac14d16ec941843050c9a7d82a6bff5b35a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cf3e0bbece35e0d1936225535b5ea91e63e45ad363d61fbec8423a53e96f6e5\",\"dweb:/ipfs/QmTMtUJcUGuMmLVMJ6PVTAWNatf9R77Cq6mzdDtFMUVB6h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"EVM_EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"GENERIC_EXTRA_ARGS_V2_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SVM_ACCOUNT_BYTE_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SVM_EXTRA_ARGS_MAX_ACCOUNTS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SVM_EXTRA_ARGS_V1_TAG","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SVM_MESSAGING_ACCOUNTS_OVERHEAD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SVM_TOKEN_TRANSFER_DATA_OVERHEAD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/contracts-ccip/contracts/=node_modules/@chainlink/contracts-ccip/contracts/","@chainlink/contracts/=node_modules/@chainlink/contracts/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/=node_modules/@pythnetwork/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@zksync/=node_modules/@zksync/","createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/","pyth-crosschain/=lib/pyth-crosschain/","solady/=node_modules/solady/","solidity-bytes-utils/=lib/solidity-bytes-utils/","solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/","wormhole-ntt/=lib/wormhole-ntt/src/","wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@chainlink/contracts-ccip/contracts/libraries/Client.sol":"Client"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@chainlink/contracts-ccip/contracts/libraries/Client.sol":{"keccak256":"0x7c736e12ebb1d0e3a0c99436eacfac14d16ec941843050c9a7d82a6bff5b35a1","urls":["bzz-raw://7cf3e0bbece35e0d1936225535b5ea91e63e45ad363d61fbec8423a53e96f6e5","dweb:/ipfs/QmTMtUJcUGuMmLVMJ6PVTAWNatf9R77Cq6mzdDtFMUVB6h"],"license":"MIT"}},"version":1},"id":64}